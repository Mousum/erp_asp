@model Mhasb.Domain.OrgSettings.FinalcialSetting

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "FinalcialSetting", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>FinalcialSetting</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.CompanyId)


        <div class="form-group">
            @Html.LabelFor(model => model.FoundedYear, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.FoundedYear)*@
                @*Enumerable.Range(1930, 81).ToList()*@
                @Html.DropDownList("FoundedYear", ViewBag.yearList as SelectList, "-- Select Period First--")
                @Html.ValidationMessageFor(model => model.FoundedYear)
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.CompanyId, "CompanyId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CompanyId", String.Empty)
                @Html.ValidationMessageFor(model => model.CompanyId)
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.FinalcialPeriod, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.FinalcialPeriod)*@
                @Html.DropDownList("FinalcialPeriod", ViewBag.PeriodList as SelectList)
                @Html.ValidationMessageFor(model => model.FinalcialPeriod)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrencyId, "CurrencyId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CurrencyId", ViewBag.CurrencyList as SelectList, new { @class = "form-control", style = "width:auto;" })
                @Html.ValidationMessageFor(model => model.CurrencyId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Capital, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Capital)
                @Html.ValidationMessageFor(model => model.Capital)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaidUpCapital, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PaidUpCapital)
                @Html.ValidationMessageFor(model => model.PaidUpCapital)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SharePrice, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SharePrice)
                @Html.ValidationMessageFor(model => model.SharePrice)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalShares, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalShares)
                @Html.ValidationMessageFor(model => model.TotalShares)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SharesCurrencyId, "SharesCurrencyId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SharesCurrencyId", ViewBag.CurrencyList as SelectList)
                @Html.ValidationMessageFor(model => model.SharesCurrencyId)
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.StartingDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.StartingDate, new { id = "StartingDate" })
                @Html.ValidationMessageFor(model => model.StartingDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndingDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EndingDate, new { id = "EndingDate" })
                @Html.ValidationMessageFor(model => model.EndingDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PeriodLockDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PeriodLockDate, new { id = "PeriodLockDate" })
                @Html.ValidationMessageFor(model => model.PeriodLockDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YearLockDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.YearLockDate, new { id = "YearLockDate" })
                @Html.ValidationMessageFor(model => model.YearLockDate)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
