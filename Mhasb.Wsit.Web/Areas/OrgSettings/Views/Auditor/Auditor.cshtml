@model Mhasb.Domain.OrgSettings.Auditor

@{
    ViewBag.Title = "Auditor";
    

    var rr = ViewBag.Employees;
}


<div class="container my-dashboard ">
    @if (TempData["succMsg"] != null)
    {
        <div class="alert alert-success">@TempData["succMsg"]</div>
    }


    @using (Html.BeginForm("AddAuditor", "Auditor", FormMethod.Post, new { @class = "", @id="auditor_form" }))
    {
        @Html.AntiForgeryToken()

         <div class="row clearfix no-margin">
            <h4 class="all-head">@ViewBag.Title</h4>
            <hr />
            @Html.ValidationSummary(true)

            @if (ViewBag.AuditorType == 1)
            {
                @Html.Hidden("etype", 1)
            }

            else
            {
                @Html.Hidden("etype", 2)
            }


            <div class="row cstm-frm-row">

                <div class="col-md-4">
                    @Html.LabelFor(model => model.AuditorName)
                </div>
                <div class="col-md-8">
                    
                        <select id="combobox" name="EmployeeId" class="form-control">
                            <option value="">Select one...</option>
                            @foreach (var employee in ViewBag.Employees)
                            {
                                <option value="@employee.Id">@employee.Users.FirstName @employee.Users.LastName</option>
                            }
                        </select>
                        @Html.ValidationMessageFor(model => model.AuditorName)
                   
                </div>
            </div>

            <div class="row cstm-frm-row">


                <div class="col-md-4">
                    @Html.LabelFor(model => model.AuditorTel)
                </div>
                <div class="col-md-8">
                    
                        @Html.TextBoxFor(model => model.AuditorTel, new { @class="cstm-input"})
                        @Html.ValidationMessageFor(model => model.AuditorTel)
                  
                </div>
            </div>

             <div class="row cstm-frm-row">
                 <div class="col-md-4">
                    @Html.LabelFor(model => model.AuditorEmail)
                 </div>
                 
                 <div class="col-md-8">
                     @Html.TextBoxFor(model => model.AuditorEmail, new { @class="cstm-input"})
                     @Html.ValidationMessageFor(model => model.AuditorEmail)
                 </div>
             </div>

             <div class="row cstm-frm-row">
                 <div class="col-md-4">
                     @Html.LabelFor(model => model.Position)
                 </div>
               
                 <div class="col-md-8">
                     @Html.TextBoxFor(model => model.Position, new { @class = "cstm-input", @disabled = "disabled" })
                     @Html.ValidationMessageFor(model => model.Position)
                 </div>
             </div>

             <div class="row cstm-frm-row">
                 <div class="col-md-4">
                     @Html.LabelFor(model => model.ManagerId, new { @class = "control-label col-md-2" })
                 </div>
              
                 <div class="col-md-8">

                     <select id="combobox1" name="ManagerId" class="form-control">
                         <option value="">Select one...</option>
                         @foreach (var employee in ViewBag.Employees)
                     {
                             <option value="@employee.Id">@employee.Users.FirstName @employee.Users.LastName</option>
                     }
                     </select>
                     </div>

                 </div>


             <div class="row cstm-frm-row">
                 <div class="col-md-offset-2 col-md-10">
                     <input type="submit" value="Save" class="btn btn-default" />
                 </div>
             </div>
        </div>

    }


    <hr>
    <div class="row clearfix">
        <div class="col-md-12">
            <div class="col-md-3">
            <h4>@ViewBag.Title List:</h4>
                </div>
            <div class="col-md-6">
            </div>
            <div class="col-md-3 edit-fa">
                <div class="input-group col-md-12">
                    <input type="text" class="search-query form-control cstm-input" placeholder="Search" />
                    <span class="input-group-btn">
                        <button class="btn btn-danger btn-tag-search" type="button">
                            <i class="fa fa-search"></i>
                        </button>
                    </span>
                </div>
            </div>
            <div class="col-md-12">
            <table class="table table-bordered table-responsive table-hover">
                <thead>
                    <tr>
                        <th>Auditor Name</th>
                        <th>Auditor Tel.</th>
                        <th>Auditor Email</th>
                        <th>Postion</th>
                        <th>Reporting Manager</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in @ViewBag.Emplist)
                    {
                        <tr>
                            <td>@item.Employees.Users.FirstName @item.Employees.Users.LastName</td>
                            <td>@item.AuditorTel</td>
                            <td>@item.AuditorEmail</td>
                            <td>@item.Employees.Designations.DesignationName</td>
                            <td>@item.Managers.Users.FirstName @item.Managers.Users.LastName</td>
                            <td>Edit</td>
                        </tr>
                    }

                </tbody>
            </table>
                </div>
        </div>
    </div>
    <hr>


</div>
@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")



<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" href="/resources/demos/style.css">
<style>
    .custom-combobox {
        position: relative;
        display: inline-block;
    }

    .custom-combobox-toggle {
        position: absolute;
        top: 0;
        bottom: 0;
        margin-left: -1px;
        padding: 0;
    }

    .custom-combobox-input {
        margin: 0;
        padding: 5px 10px;
    }
</style>


<script>

    $(document).ready(function () {
        var data=@Html.Raw(Json.Encode(ViewBag.dataset));
        data=data.Data;

        $( "#auditor_form" ).submit(function( event ) {
            if($("#combobox").val()=='' || $("#combobox1").val()==''){
                alert("Please select both Auditor and Manager...");
                event.preventDefault();
            }

            if($("#combobox").val()== $("#combobox1").val()){
                alert("Please Check Again...Auditor and Manager are same...");
                event.preventDefault();
            }
                
        });
       
        $("#combobox").combobox({ 
            select: function (event, ui) { 
                //alert(this.value);
                var id=this.value;
                //console.log(data);
                $.each(data,function(index,value){
                    if(id==value.empid){
                        $("#AuditorEmail").val(value.email);
                        $("#Position").val(value.designation);
                    }
                });
            } 
        });
        
    });



    (function ($) {
        $.widget("custom.combobox", {
            _create: function () {
                this.wrapper = $("<span>")
                  .addClass("custom-combobox")
                  .insertAfter(this.element);

                this.element.hide();
                this._createAutocomplete();
                this._createShowAllButton();
            },

            _createAutocomplete: function () {
                var selected = this.element.children(":selected"),
                  value = selected.val() ? selected.text() : "";

                this.input = $("<input>")
                  .appendTo(this.wrapper)
                  .val(value)
                  .attr("title", "")
                  .addClass("custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left")
                  .autocomplete({
                      delay: 0,
                      minLength: 0,
                      source: $.proxy(this, "_source")
                  })
                  .tooltip({
                      tooltipClass: "ui-state-highlight"
                  });

                this._on(this.input, {
                    autocompleteselect: function (event, ui) {
                        ui.item.option.selected = true;
                        this._trigger("select", event, {
                            item: ui.item.option
                        });
                    },

                    autocompletechange: "_removeIfInvalid"
                });
            },

            _createShowAllButton: function () {
                var input = this.input,
                  wasOpen = false;

                $("<a>")
                  .attr("tabIndex", -1)
                  .attr("title", "Show All Items")
                  .tooltip()
                  .appendTo(this.wrapper)
                  .button({
                      icons: {
                          primary: "ui-icon-triangle-1-s"
                      },
                      text: false
                  })
                  .removeClass("ui-corner-all")
                  .addClass("custom-combobox-toggle ui-corner-right")
                  .mousedown(function () {
                      wasOpen = input.autocomplete("widget").is(":visible");
                  })
                  .click(function () {
                      input.focus();

                      // Close if already visible
                      if (wasOpen) {
                          return;
                      }

                      // Pass empty string as value to search for, displaying all results
                      input.autocomplete("search", "");
                  });
            },

            _source: function (request, response) {
                var matcher = new RegExp($.ui.autocomplete.escapeRegex(request.term), "i");
                response(this.element.children("option").map(function () {
                    var text = $(this).text();
                    if (this.value && (!request.term || matcher.test(text)))
                        return {
                            label: text,
                            value: text,
                            option: this
                        };
                }));
            },

            _removeIfInvalid: function (event, ui) {

                // Selected an item, nothing to do
                if (ui.item) {
                    return;
                }

                // Search for a match (case-insensitive)
                var value = this.input.val(),
                  valueLowerCase = value.toLowerCase(),
                  valid = false;
                this.element.children("option").each(function () {
                    if ($(this).text().toLowerCase() === valueLowerCase) {
                        this.selected = valid = true;
                        return false;
                    }
                });

                // Found a match, nothing to do
                if (valid) {
                    return;
                }

                // Remove invalid value
                this.input
                  .val("")
                  .attr("title", value + " didn't match any item")
                  .tooltip("open");
                this.element.val("");
                this._delay(function () {
                    this.input.tooltip("close").attr("title", "");
                }, 2500);
                this.input.autocomplete("instance").term = "";
            },

            _destroy: function () {
                this.wrapper.remove();
                this.element.show();
            }
        });
    })(jQuery);

    $(function () {
        $("#combobox").combobox();
        $("#toggle").click(function () {
            $("#combobox").toggle();
        });

        $("#combobox1").combobox();
        $("#toggle1").click(function () {
            $("#combobox1").toggle();
        });

    });
</script>
}
